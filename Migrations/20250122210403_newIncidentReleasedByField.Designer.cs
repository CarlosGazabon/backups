// <auto-generated />
using System;
using Inventio.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Inventio.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20250122210403_newIncidentReleasedByField")]
    partial class newIncidentReleasedByField
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventio.Models.ChangeOver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HourSort")
                        .HasColumnType("int")
                        .HasColumnName("Hour_Sort");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("Objective")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subcategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChangeOver", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.DowntimeCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsChangeOver")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DowntimeCategory");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeCode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DowntimeCategoryID")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeSubCategory1ID")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeSubCategory2ID")
                        .HasColumnType("int");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<int>("ObjectiveMinutes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DowntimeCategoryID");

                    b.HasIndex("DowntimeSubCategory1ID");

                    b.HasIndex("DowntimeSubCategory2ID");

                    b.ToTable("DowntimeCode");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DowntimeCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeCodeId")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeSubCategory1Id")
                        .HasColumnType("int");

                    b.Property<int>("DowntimeSubCategory2Id")
                        .HasColumnType("int");

                    b.Property<decimal>("ExtraMinutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductivityID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DowntimeCategoryId");

                    b.HasIndex("DowntimeCodeId");

                    b.HasIndex("DowntimeSubCategory1Id");

                    b.HasIndex("DowntimeSubCategory2Id");

                    b.HasIndex("ProductivityID");

                    b.ToTable("DowntimeReason");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeSubCategory1", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DowntimeCategoryID")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DowntimeCategoryID");

                    b.ToTable("DowntimeSubCategory1");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeSubCategory2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DowntimeSubCategory1ID")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DowntimeSubCategory1ID");

                    b.ToTable("DowntimeSubCategory2");
                });

            modelBuilder.Entity("Inventio.Models.FeatureFlags", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FeatureFlags");
                });

            modelBuilder.Entity("Inventio.Models.Hour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Time")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TimeTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hour");
                });

            modelBuilder.Entity("Inventio.Models.Icons", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Disabled")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Icons__3214EC071FEBF8E9");

                    b.ToTable("Icons");
                });

            modelBuilder.Entity("Inventio.Models.Line", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("BottleScrap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("CanScrap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Efficiency")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("PouchScrap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<bool?>("PreformScrap")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("(CONVERT([bit],(0)))");

                    b.Property<decimal>("Scrap")
                        .HasColumnType("decimal(18, 4)");

                    b.Property<decimal>("Utilization")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("Line", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Menu", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("IconId")
                        .HasColumnType("int");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ParentId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Parent_id");

                    b.Property<string>("Route")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Sort")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Menu__3213E83F75A31B61");

                    b.HasIndex("IconId");

                    b.HasIndex("ParentId");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.MenuRights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("CanAdd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Can_add")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CanDelete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Can_delete")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CanModify")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Can_modify")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("CanView")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("Can_view")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("MenuId")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Menu_id");

                    b.Property<string>("RoleId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("Role_id");

                    b.HasKey("Id")
                        .HasName("PK__MenuRigh__3213E83FB1DA2D1C");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("MenuRights");
                });

            modelBuilder.Entity("Inventio.Models.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Efficiency")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<int>("Production")
                        .HasColumnType("int");

                    b.Property<decimal>("Scrap")
                        .HasColumnType("decimal(5,2)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<decimal>("Utilization")
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("Id");

                    b.HasIndex("LineID");

                    b.ToTable("Objective");
                });

            modelBuilder.Entity("Inventio.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<int>("UnitsPerPackage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LineID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Inventio.Models.Productivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BottleScrap")
                        .HasColumnType("int");

                    b.Property<int>("BottleScrap2")
                        .HasColumnType("int");

                    b.Property<int>("CanScrap")
                        .HasColumnType("int");

                    b.Property<int>("CanScrap2")
                        .HasColumnType("int");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DowntimeMinutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<string>("HourEnd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HourID")
                        .HasColumnType("int");

                    b.Property<string>("HourStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PouchScrap")
                        .HasColumnType("int");

                    b.Property<int>("PouchScrap2")
                        .HasColumnType("int");

                    b.Property<int>("PreformScrap")
                        .HasColumnType("int");

                    b.Property<int>("PreformScrap2")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID2")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Production2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingMinutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScrapUnits")
                        .HasColumnType("int");

                    b.Property<int>("ScrapUnits2")
                        .HasColumnType("int");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HourID");

                    b.HasIndex("LineID");

                    b.HasIndex("ShiftID");

                    b.HasIndex("SupervisorID");

                    b.ToTable("Productivity");
                });

            modelBuilder.Entity("Inventio.Models.ProductivityFlow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BottleScrap")
                        .HasColumnType("int");

                    b.Property<int>("CanScrap")
                        .HasColumnType("int");

                    b.Property<bool>("Empty")
                        .HasColumnType("bit");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("PouchScrap")
                        .HasColumnType("int");

                    b.Property<int>("PreformScrap")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductivityID")
                        .HasColumnType("int");

                    b.Property<int>("ScrapUnits")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("ProductivityID");

                    b.ToTable("ProductivityFlow");
                });

            modelBuilder.Entity("Inventio.Models.QualityIncident", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionComments")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<string>("BatchNumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Comments")
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("DateOfIncident")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DateOfRelease")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpiryCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IncidentNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IncidentNumberExtra")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("PotencialRootCause")
                        .IsRequired()
                        .HasMaxLength(180)
                        .HasColumnType("nvarchar(180)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("QualityIncidentReasonId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("ReleaseComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Released")
                        .HasColumnType("bit");

                    b.Property<string>("ReleasedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ReleasedForConsumption")
                        .HasColumnType("int");

                    b.Property<int>("ReleasedForDestruction")
                        .HasColumnType("int");

                    b.Property<int>("ReleasedForDonation")
                        .HasColumnType("int");

                    b.Property<int>("ReleasedForOther")
                        .HasColumnType("int");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LineId");

                    b.HasIndex("ProductId");

                    b.HasIndex("QualityIncidentReasonId");

                    b.HasIndex("ReleasedById");

                    b.HasIndex("ShiftId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("QualityIncident");
                });

            modelBuilder.Entity("Inventio.Models.QualityIncidentReason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Disable")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("QualityIncidentReason");
                });

            modelBuilder.Entity("Inventio.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.RoleAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("MenuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleAccess");
                });

            modelBuilder.Entity("Inventio.Models.RoleRights", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool?>("AllowDelete")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowEdit")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowInsert")
                        .HasColumnType("bit");

                    b.Property<bool?>("AllowView")
                        .HasColumnType("bit");

                    b.Property<string>("MenuId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleRights");
                });

            modelBuilder.Entity("Inventio.Models.Shift", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Schedule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleEnds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScheduleStarts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekDays1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WeekDays2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Shift");
                });

            modelBuilder.Entity("Inventio.Models.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Inactive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Supervisor");
                });

            modelBuilder.Entity("Inventio.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("PasswordExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.ProductionSummary", b =>
                {
                    b.Property<decimal>("ChangeHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<decimal>("ChangeMins")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EffDen")
                        .HasColumnType("decimal(38, 6)")
                        .HasColumnName("EffDEN");

                    b.Property<decimal?>("EffDensku")
                        .HasColumnType("decimal(38, 6)")
                        .HasColumnName("EffDENSKU");

                    b.Property<decimal?>("Efficiency")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<int?>("Hrs")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int?>("Scrap")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SKU");

                    b.Property<int?>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("ProductionSummary", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.ProductivityReport", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Downtime_minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Flavor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flavor2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Flow")
                        .HasColumnType("int");

                    b.Property<string>("HourEnd")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourStart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LineID")
                        .HasColumnType("int");

                    b.Property<string>("NetContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetContent2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductID2")
                        .HasColumnType("int");

                    b.Property<int?>("Production")
                        .HasColumnType("int");

                    b.Property<int?>("Production2")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ShiftID")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SupervisorID")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwProductivityReport", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.ProductivitySummary", b =>
                {
                    b.Property<int>("BottleScrap")
                        .HasColumnType("int");

                    b.Property<int>("CanScrap")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PouchScrap")
                        .HasColumnType("int");

                    b.Property<int>("PreformScrap")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ScrapDEN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScrapUnits")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnitsPerPackage")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("ProductivitySummary", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.Summary", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EffDEN")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Efficiency")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScrapUnits")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("Summary", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwDailySummary", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Flavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("VwDailySummary", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwDataEfficiency", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DowntimeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Flavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProductivityID")
                        .HasColumnType("int");

                    b.Property<int>("Scrap")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwDataEfficiency", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwDowntime", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DowntimeSubCategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ExtraMinutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<string>("HoraSort")
                        .HasMaxLength(13)
                        .IsUnicode(false)
                        .HasColumnType("varchar(13)")
                        .HasColumnName("Hora_Sort");

                    b.Property<string>("HourStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(37, 21)")
                        .HasColumnName("hours");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ObjectiveMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shift_");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SKU");

                    b.Property<int>("Sort")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vwDowntime", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwDowntimeTrend", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExtraMinutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(37, 21)")
                        .HasColumnName("hours");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("SubCategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategory2Id")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwDowntimeTrend", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwDowntimeXSubCat", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExtraMinutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(37, 21)")
                        .HasColumnName("hours");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shift");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategory2Id")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwDowntimeXSubCat", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwGeneralEfficiency", b =>
                {
                    b.Property<decimal>("ChangeHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<decimal>("ChangeMins")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("EffDen")
                        .HasColumnType("decimal(38, 6)")
                        .HasColumnName("EffDEN");

                    b.Property<string>("Flavour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<int?>("Hrs")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwGeneralEfficiency", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwProductivityWithDowntime", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DowntimeCategoryId")
                        .HasColumnType("int");

                    b.Property<string>("DowntimeCategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<string>("HourEnd")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HourStart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int")
                        .HasColumnName("LineID");

                    b.Property<decimal?>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SKU");

                    b.ToTable((string)null);

                    b.ToView("vwProductivityWithDowntime", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwStatisticalChangeOver", b =>
                {
                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FlowIndex")
                        .HasColumnType("int");

                    b.Property<decimal?>("Hours")
                        .HasColumnType("decimal(37, 21)")
                        .HasColumnName("hours");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ObjectiveMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("shift");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int")
                        .HasColumnName("shiftId");

                    b.Property<string>("SubCategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategory2Id")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("SupervisorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vwStatisticalChangeOver", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwSupervisorMetrics", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<decimal?>("ScrapDen")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int?>("ScrapUnits")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwSupervisorMetrics", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.Views.VwUtilization", b =>
                {
                    b.Property<decimal>("ChangeHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<int?>("Hrs")
                        .HasColumnType("int");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("NetHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<decimal?>("NetPlantHrs")
                        .HasColumnType("decimal(38, 6)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SKU");

                    b.ToTable((string)null);

                    b.ToView("vwUtilization", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("inventio.Models.StoredProcedure.GetEfficiency", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DownHrs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Hrs")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MaxProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Scrap")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("inventio.Models.StoredProcedure.SPGetDataEfficiency", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DownHrs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Flavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flow")
                        .HasColumnType("int");

                    b.Property<int>("Hrs")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineId")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Scrap")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftId")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorId")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("inventio.Models.Views.VwCases", b =>
                {
                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("VwCases", (string)null);
                });

            modelBuilder.Entity("inventio.Models.Views.VwDowntimePerSku", b =>
                {
                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ExtraMinutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Failure")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Flavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<decimal>("Minutes")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SKUID")
                        .HasColumnType("int");

                    b.Property<string>("Shift")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShiftID")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("VwDowntimePerSku", (string)null);
                });

            modelBuilder.Entity("inventio.Models.Views.VwPackageSku", b =>
                {
                    b.Property<int>("BottleScrap")
                        .HasColumnType("int");

                    b.Property<int>("CanScrap")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DownHrs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Flavor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hrs")
                        .HasColumnType("int");

                    b.Property<string>("Line")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LineID")
                        .HasColumnType("int");

                    b.Property<decimal>("MaxProduction")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NetContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetHrs")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Packing")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreformScrap")
                        .HasColumnType("int");

                    b.Property<decimal>("Production")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ScrapUnits")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StandardSpeed")
                        .HasColumnType("int");

                    b.Property<string>("Supervisor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupervisorID")
                        .HasColumnType("int");

                    b.Property<int>("UnitsPerPackage")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vwPackageSku", (string)null);
                });

            modelBuilder.Entity("Inventio.Models.DowntimeCode", b =>
                {
                    b.HasOne("Inventio.Models.DowntimeCategory", "DowntimeCategory")
                        .WithMany()
                        .HasForeignKey("DowntimeCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.DowntimeSubCategory1", "DowntimeSubCategory1")
                        .WithMany()
                        .HasForeignKey("DowntimeSubCategory1ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.DowntimeSubCategory2", "DowntimeSubCategory2")
                        .WithMany()
                        .HasForeignKey("DowntimeSubCategory2ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DowntimeCategory");

                    b.Navigation("DowntimeSubCategory1");

                    b.Navigation("DowntimeSubCategory2");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeReason", b =>
                {
                    b.HasOne("Inventio.Models.DowntimeCategory", "DowntimeCategory")
                        .WithMany()
                        .HasForeignKey("DowntimeCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.DowntimeCode", "DowntimeCode")
                        .WithMany()
                        .HasForeignKey("DowntimeCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.DowntimeSubCategory1", "DowntimeSubCategory1")
                        .WithMany()
                        .HasForeignKey("DowntimeSubCategory1Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.DowntimeSubCategory2", "DowntimeSubCategory2")
                        .WithMany()
                        .HasForeignKey("DowntimeSubCategory2Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Productivity", "Productivity")
                        .WithMany("DowntimeReasons")
                        .HasForeignKey("ProductivityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DowntimeCategory");

                    b.Navigation("DowntimeCode");

                    b.Navigation("DowntimeSubCategory1");

                    b.Navigation("DowntimeSubCategory2");

                    b.Navigation("Productivity");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeSubCategory1", b =>
                {
                    b.HasOne("Inventio.Models.DowntimeCategory", "DowntimeCategory")
                        .WithMany()
                        .HasForeignKey("DowntimeCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DowntimeCategory");
                });

            modelBuilder.Entity("Inventio.Models.DowntimeSubCategory2", b =>
                {
                    b.HasOne("Inventio.Models.DowntimeSubCategory1", "DowntimeSubCategory1")
                        .WithMany()
                        .HasForeignKey("DowntimeSubCategory1ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DowntimeSubCategory1");
                });

            modelBuilder.Entity("Inventio.Models.Menu", b =>
                {
                    b.HasOne("Inventio.Models.Icons", "Icon")
                        .WithMany()
                        .HasForeignKey("IconId");

                    b.HasOne("Inventio.Models.Menu", "Parent")
                        .WithMany("InverseParent")
                        .HasForeignKey("ParentId");

                    b.Navigation("Icon");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Inventio.Models.MenuRights", b =>
                {
                    b.HasOne("Inventio.Models.Menu", "Menu")
                        .WithMany("MenuRights")
                        .HasForeignKey("MenuId");

                    b.HasOne("Inventio.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.Navigation("Menu");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Inventio.Models.Objective", b =>
                {
                    b.HasOne("Inventio.Models.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("Inventio.Models.Product", b =>
                {
                    b.HasOne("Inventio.Models.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Line");
                });

            modelBuilder.Entity("Inventio.Models.Productivity", b =>
                {
                    b.HasOne("Inventio.Models.Hour", "Hour")
                        .WithMany()
                        .HasForeignKey("HourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Supervisor", "Supervisor")
                        .WithMany()
                        .HasForeignKey("SupervisorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hour");

                    b.Navigation("Line");

                    b.Navigation("Shift");

                    b.Navigation("Supervisor");
                });

            modelBuilder.Entity("Inventio.Models.ProductivityFlow", b =>
                {
                    b.HasOne("Inventio.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductID");

                    b.HasOne("Inventio.Models.Productivity", null)
                        .WithMany("ProductivityFlows")
                        .HasForeignKey("ProductivityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Inventio.Models.QualityIncident", b =>
                {
                    b.HasOne("Inventio.Models.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Line", "Line")
                        .WithMany()
                        .HasForeignKey("LineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.QualityIncidentReason", "QualityIncidentReason")
                        .WithMany()
                        .HasForeignKey("QualityIncidentReasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.User", "ReleasedBy")
                        .WithMany()
                        .HasForeignKey("ReleasedById");

                    b.HasOne("Inventio.Models.Shift", "Shift")
                        .WithMany()
                        .HasForeignKey("ShiftId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Line");

                    b.Navigation("Product");

                    b.Navigation("QualityIncidentReason");

                    b.Navigation("ReleasedBy");

                    b.Navigation("Shift");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Inventio.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Inventio.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Inventio.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Inventio.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Inventio.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Inventio.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Inventio.Models.Menu", b =>
                {
                    b.Navigation("InverseParent");

                    b.Navigation("MenuRights");
                });

            modelBuilder.Entity("Inventio.Models.Productivity", b =>
                {
                    b.Navigation("DowntimeReasons");

                    b.Navigation("ProductivityFlows");
                });
#pragma warning restore 612, 618
        }
    }
}
